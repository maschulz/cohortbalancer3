[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cohortbalancer3"
version = "0.2.0"
description = "Tools for causal inference and matching with an emphasis on cohort balancing"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Marc-AndrÃ© Schulz", email = "marc.a.schulz@gmail.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
dependencies = [
    "numpy>=1.20.0",
    "pandas>=1.3.0",
    "scipy>=1.7.0",
    "scikit-learn>=1.0.0",
    "statsmodels>=0.13.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "black>=23.0.0",
    "ruff>=0.0.265",
    "mypy>=1.0.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "nbsphinx>=0.8.0",
    "jupyter>=1.0.0",
    "myst-parser>=0.18.0",
]
viz = [
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
    "networkx>=3.0.0",
]
xgboost = [
    "xgboost>=1.5.0",
]

[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py310"
extend-include = ["*.ipynb"]
exclude = [
  ".git",
  "__pycache__",
  "build",
  "dist",
  ".venv",
  "env",
]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "D203",  # Conflicts with D211 (one blank line before class docstring vs. none)
  "D213",  # Conflicts with D212 (multi-line docstring starts on second line)
  "S101",  # Allow use of `assert` in tests
  "PLR0913",  # too many arguments in function
  "ERA001", # Ignore commented-out code warnings
  "COM812", # Trailing comma missing - conflicts with formatter
  "N815", # Variable, function, or attribute should be lowercase.
  "N803", # Argument name should be lowercase (allowing uppercase for mathematical notation)
  "N806", # Variable name should be lowercase (allowing uppercase for mathematical notation)
  "G004", # Logging statement uses f-string
  "PLR2004", # Magic value used in comparison
  "TRY003", # Avoid specifying long messages outside the exception class


]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.isort]
known-first-party = ["cohortbalancer3"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"
docstring-code-format = true
docstring-code-line-length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = [
    "pandas.*",
    "numpy.*",
    "scipy.*",
    "sklearn.*",
    "matplotlib.*",
    "seaborn.*",
    "statsmodels.*",
    "xgboost.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = "--cov=cohortbalancer3 --cov-report=term-missing" 