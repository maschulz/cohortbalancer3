name: Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,viz]"
    
    - name: Debug environment
      run: |
        python --version
        pip freeze | grep -E 'pytest|cohortbalancer3'
    
    # - name: Lint with ruff
    #   uses: chartboost/ruff-action@v1
    #   with:
    #     version: latest
    #     args: --select E,F,I,N,W,C90
    
    # - name: Check formatting with black
    #   uses: psf/black@stable
    #   with:
    #     options: "--check --verbose"
    #     src: "./cohortbalancer3"
    #     version: "23.0.0"
      
    # - name: Run type checking with mypy
    #   run: |
    #     mypy cohortbalancer3
    #   continue-on-error: true
    
    - name: Run tests with coverage
      run: pytest -v --cov=cohortbalancer3 --cov-report=xml --cov-report=term
    
    - name: Upload coverage report
      if: always()
      uses: codecov/codecov-action@v5
      with:
        files: ./coverage.xml
        fail_ci_if_error: false

    - name: Upload test artifacts
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: |
          coverage.xml
          .coverage
        retention-days: 7 